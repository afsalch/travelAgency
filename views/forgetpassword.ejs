<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Nest Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg" />
    <!-- Template CSS -->
    <link href="assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
    <style>
        .position-relative {
            position: relative;
        }

        .position-absolute {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
        }

        .form-control {
            padding-right: 30px;
            /* Make space for the icon */
        }
    </style>
</head>

<body>
    <main>

        <section class="content-main mt-80 mb-80">
            <div class="card mx-auto card-login">
                <div class="card-body">
                    <h4 class="card-title mb-4">Enter Email</h4>
                    <form id="login-form" action="/" method="post">
                        <div class="mb-3">
                            <input class="form-control" id="email" name="email" placeholder="Enter email"
                                type="email" />
                            <span id="email-error" class="text-danger"></span>
                        </div>




                        <!-- form-group form-check .// -->
                        <div class="mb-4">
                            <button type="submit" class="btn btn-primary w-100">Submit</button>
                        </div>
                        <!-- form-group// -->
                    </form>

                </div>
            </div>
        </section>

    </main>
    <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="assets/js/main.js?v=1.1" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        document.getElementById('login-form').addEventListener('submit', async function (event) {
            event.preventDefault();

            // Get input elements
            var email = document.getElementById('email');

            // Reset previous error messages
            document.getElementById('email-error').innerText = '';

            let isValid = true;

            // Validate inputs
            if (email.value.trim() === '') {
                document.getElementById('email-error').innerText = 'Email is required.';
                isValid = false;
            }

            if (!isValid) {
                return;
            }

            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());

            try {
                // Send request to the editpassword endpoint
                const response = await fetch('/editpassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                // Reset previous error messages
                document.getElementById('email-error').innerText = '';

                // Handle response
                if (response.ok) {
                    // Redirect to OTP route with email as a query parameter
                    const encodedEmail = encodeURIComponent(result.email); 
                    window.location.replace(`/otp?email=${encodedEmail}`);
                } else {
                    // Display error messages based on the specific error returned
                    if (result.emailerror) {
                        document.getElementById('email-error').innerText = result.emailerror;
                    }

                    if (result.isblocked) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Account Blocked',
                            text: result.isblocked,
                        }).then(() => {
                            // Reload the page when the alert is closed
                            window.location.reload();
                        });
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('email-error').innerText = 'An error occurred. Please try again later.';
            }
        });

    </script>





</body>

</html>